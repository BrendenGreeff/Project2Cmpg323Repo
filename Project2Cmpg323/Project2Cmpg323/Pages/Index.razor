@page "/index"

@using System.IO;
@using DataLibrary
@using System.Text
@using Microsoft.Extensions.Configuration
@using Project2Cmpg323.Models

@inject IDataAccess _data
@inject IConfiguration _config

<style>
    .div {
        margin: auto;
        width: auto;
        align-content: center;
        align-items: center;
        text-align: center;
        align-self: auto;
    }

    label {
        display: inline;
        width: 90px;
        text-align: center;
        font-weight: bold;
        align-content: center;
        align-items: center;
    }

    .heading {
        font-size: 150px;
        font-weight: bold;
    }

    .container {
        background-color: aliceblue;
        width: 20%;
        height: 55%;
        text-align: center;
    }
</style>

<div class="div">
    <div>
        <img src="@Image" style="width: 250px; height: 250px" />
        <br />
        <InputFile OnChange="HandleFileSelected"></InputFile>
        <br />
        <button type="submit" class="btn-primary" @onclick="Submit">Upload</button>
    </div>
    <br />
</div>


@code{


    ImagesModels imgmodel = new ImagesModels();

    List<ImagesModels> pictures;
    List<UsersModels> users;

    List<Images> imgDisplayObj;

    public string Username = Login.Name;
    public string Profileimg = Login.ProfileImg;
    public string Image { get; set; }
    public string Images_Name { get; }
    private static string img;

    protected override async Task OnInitializedAsync()
    {

        string sql = "SELECT * FROM images";
        pictures = await _data.LoadData<ImagesModels, dynamic>(sql, new { }, _config.GetConnectionString("default"));

        string sql2 = "SELECT Users_ProfileImg FROM users WHERE Users_Username = @username";
        users = await _data.LoadData<UsersModels, dynamic>(sql2, new { username = Username }, _config.GetConnectionString("default"));

        //Login.ProfileImg = Image;
        Image = Login.ProfileImg;



    }


    private async Task HandleFileSelected(InputFileChangeEventArgs fileChangeEvent)
    {
        var file = fileChangeEvent.File;
        if (file != null)
        {
            var buffer = new byte[file.Size];

            await file.OpenReadStream(1512000).ReadAsync(buffer);

            Image = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";

            img = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";

        }


    }

    private async Task Submit()
    {


        string sql2 = "UPDATE users SET Users_ProfileImg = @image WHERE Users_Username = @username";
        await _data.SaveData(sql2, new { image = Image, username = Username }, _config.GetConnectionString("default"));

        //Image = Login.ProfileImg;
        Login.ProfileImg = Image;


    }

    //Service to fetch images
    public List<UsersModels> DisplayImages()
    {
        return users.ToList();
    }

    string convertImageToDisplay(byte[] img)
    {
        if (img != null)
        {
            var base64 = Convert.ToBase64String(img);
            var fs = string.Format("data: image/jpeg; base64,{0}", base64);
            return fs;
        }
        return "";
    }


}
